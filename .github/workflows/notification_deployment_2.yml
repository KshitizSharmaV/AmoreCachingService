# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.ZONE_NAME }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_ZONE: ${{ secrets.ZONE_NAME }}
  DEPLOYMENT_NAME: NotificationService/deployment.yaml
  REPOSITORY: us-central1-docker.pkg.dev 
  IMAGE: notification

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'
    
#     - name: 'Install gke-gcloud-auth-plugin'
#       run: 'gcloud components install gke-gcloud-auth-plugin'
    
    - name: 'Install gke-gcloud-auth-plugin'
      run: |-
        env SUDO_COMMAND='apt-get install google-cloud-sdk-gke-gcloud-auth-plugin' sudo
      shell: bash

#     - name: Build Docker Image
#       run: docker build -t $IMAGE:latest -f Dockerfile_Notifications .

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

#     - name: Push Docker Image to Artifact Registry
#       env:
#         GIT_TAG: latest
#       run: |-
#         docker tag $IMAGE:latest us-central1-docker.pkg.dev/$PROJECT_ID/amore-microservices/$IMAGE:latest
#         docker push us-central1-docker.pkg.dev/$PROJECT_ID/amore-microservices/$IMAGE:latest
        
    - id: 'auth2'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.COMPUTE_ENGINE_SA_KEY }}'    
        
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
        location: ${{ secrets.ZONE_NAME }}
        project_id: ${{ secrets.PROJECT_ID }}
        use_auth_provider: true
          
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
        
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        # replacing the image name in the k8s template
        # ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$us-central1-docker.pkg.dev/$PROJECT_ID/amore-microservices/$IMAGE:latest
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status $DEPLOYMENT_NAME
