name: Build and Push Common Services to GKE

on:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.ZONE_NAME }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_ZONE: ${{ secrets.ZONE_NAME }}
  DEPLOYMENT_NAME: common_deployment.yaml
  REPOSITORY: us-central1-docker.pkg.dev 
  USE_GKE_GCLOUD_AUTH_PLUGIN: true

jobs:
  setup-build-publish:
    name: Setup, Build and Publish
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    strategy:
      matrix:
        my_images:
          - image: profiles-redis
            Dockerfile: Dockerfile_ProfileRedis
          - image: notification
            Dockerfile: Dockerfile_Notifications
          - image: messaging
            Dockerfile: Dockerfile_Messaging


    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Export use-gke-gcloud-auth-plugin
      run: |
        export USE_GKE_GCLOUD_AUTH_PLUGIN=True

    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'

    - name: Configure Docker Client
      run: |-
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker $REPOSITORY --quiet
    
    - name: Build and Push Docker Image to Artifact Registry
      env:
        GIT_TAG: latest
      run: |-
        echo "Building image: ${{ matrix.my_images.image }}"
        docker build -t ${{ matrix.my_images.image }}:latest -f ${{ matrix.my_images.Dockerfile }} .
        echo "Tagging image: ${{ matrix.my_images.image }}"
        docker tag ${{ matrix.my_images.image }}:latest $REPOSITORY/$PROJECT_ID/amore-microservices/${{ matrix.my_images.image }}:latest
        echo "Pushing image: ${{ matrix.my_images.image }}"
        docker push $REPOSITORY/$PROJECT_ID/amore-microservices/${{ matrix.my_images.image }}:latest
        
  deploy-to-gke:
    name: Deploy to GKE
    needs: setup-build-publish
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Export use-gke-gcloud-auth-plugin
        run: |
          export USE_GKE_GCLOUD_AUTH_PLUGIN=True
          
      - id: 'auth2'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.COMPUTE_ENGINE_SA_KEY }}'    

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components list
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt update
          sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin kubectl
          gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_ZONE

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl apply -f $DEPLOYMENT_NAME
